services:
  db:
    container_name: db
    image: postgres:17-alpine
    volumes:
      - ./postgres/data:/var/lib/postgres/data
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always

  redis:
    image: redis:8.0.2-alpine


  backend:
    container_name: backend
    build:
      context: .
    working_dir: /app
    command: sh -c "python manage.py wait_for_db &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./core:/app
    environment:
      - DEBUG=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    restart: always
    depends_on:
      - db

  celery:
    container_name: celery
    build:
      context: .
    command: celery -A core worker -l INFO
    volumes:
      - ./core:/app
    environment:
    - DEBUG=True
    - CELERY_BROKER_URL=redis://redis:6379/0
    - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - backend

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - 5000:80
      - 25:25
      - 143:143
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions_HostName=smtp4dev

volumes:
  smtp4dev-data: